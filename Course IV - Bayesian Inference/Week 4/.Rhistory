library(statsr)
library(MASS)
library(dplyr)
library(ggplot2)
library(BAS)
install.packages('BAS')
library(statsr)
library(MASS)
library(dplyr)
library(ggplot2)
library(BAS)
data(wage)
data(wage)
data(wage)
data(wage)
sum(wage$wage)
length(wage$wage)
ggplot(data=wage, aes(x=wage)) +
geom_histogram()
ggplot(data=wage, aes(x=wage)) +
geom_histogram(color='black',fill='orange')
wage%>%summarise(n=n(), mn = mean(wage), md=median(wage))
ggplot(data=wage, aes(x=wage)) +
geom_histogram(color='black',fill='orange')
wage%>%summarise(n=n(), mn = mean(wage), md=median(wage), q25=quantile(0.25))
ggplot(data=wage, aes(x=wage)) +
geom_histogram(color='black',fill='orange')
wage%>%summarise(n=n(), mn = mean(wage), md=median(wage), q25=quantile(wage,0.25))
View(wage)
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=educ, y=wage))+
geom_jitter()
View(wage)
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=educ, y=wage))+
geom_jitter(color='black', fill='orange')
View(wage)
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=exper, y=wage))+
geom_scatter(color='orange', alpha=0.7)
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=exper, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=kww, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=IQ, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=iq, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=hour, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=hours, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=feduc, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=meduc, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=tenure, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=sibs, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=wage, aes(x=brthord, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=brthord, y=wage))+
geom_point(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=brthord, y=wage))+
geom_boxplot(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_boxplot(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_violin(color='orange', alpha=0.7, fill='black')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_violin(color='black', alpha=0.7, fill='orange')
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_violin(color='black', alpha=0.7, fill='orange', draw_quantiles=c(.25,.5,.75))
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_violin(color='black', alpha=0.7, fill='orange', draw_quantiles=c(.25,.5,.75), trim=TRUE)
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=married, y=wage))+
geom_violin(color='black', alpha=0.7, fill='orange', draw_quantiles=c(.25,.5,.75), trim=FALSE)
# type your code for the Exercise here, and Knit
ggplot(data=na.omit(wage), aes(x=black, y=wage))+
geom_violin(color='black', alpha=0.7, fill='orange', draw_quantiles=c(.25,.5,.75), trim=FALSE)
ggplot(data = wage, aes(x = iq, y = wage)) +
geom_point()
m_wage_iq = lm(wage ~ iq, data = wage)
m_wage_iq$coefficients
summary(m_wage_iq)$sigma
plot.new
qqnorm(m_wage_iq$residuals)
qqline(m_wage_iq$residuals)
plot(wage$iq, m_wage_iq$residuals)
abline(0, 0)
plot.new
hist(m_wage_iq$residuals)
m_wage_educ = lm(wage ~ educ, data = wage)
plot.new
qqnorm(m_wage_educ$residuals)
qqline(m_wage_educ$residuals)
plot(wage$iq, m_wage_educ$residuals)
abline(0, 0)
plot.new
hist(m_wage_educ$residuals)
m_wage_educ = lm(wage ~ educ, data = wage)
plot.new
qqnorm(m_wage_educ$residuals)
qqline(m_wage_educ$residuals)
plot(wage$iq, m_wage_educ$residuals)
abline(0, 0)
plot.new
hist(m_wage_educ$residuals)
m_lwage_iq = lm(lwage ~ iq, data = wage)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals)
# type your code for Question 4 here, and Knit
summary(m_lwage_iq)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals, breaks=20)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals, breaks=40)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals, breaks=30)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals, breaks=25)
# type your code for the Exercise here, and Knit
plot.new
qqnorm(m_lwage_iq $residuals)
qqline(m_lwage_iq $residuals)
plot(wage$iq, m_lwage_iq $residuals)
abline(0, 0)
plot.new
hist(m_lwage_iq $residuals, breaks=22)
# type your code for Question 4 here, and Knit
summary(m_lwage_iq)$iq
# type your code for Question 4 here, and Knit
summary(m_lwage_iq)
# type your code for Question 4 here, and Knit
summary(m_lwage_iq)
# type your code for Question 4 here, and Knit
summary(m_lwage_iq)
c(.008807-1.96*.0008694,.008807+1.96*.0008694)
# type your code for the Exercise here, and Knit
15*0.015
m_lwage_full = lm(lwage ~ . - wage, data = wage)
summary(m_lwage_full)
# type your code for Question 5 here, and Knit
?predict
BIC(m_lwage_full)
m_lwage_nobrthord = lm(lwage ~ . -wage -brthord, data = na.omit(wage))
BIC(m_lwage_nobrthord)
m_lwage_nobrthord = lm(lwage ~ . -wage -sibs, data = na.omit(wage))
BIC(m_lwage_nobrthord)
m_lwage_nobrthord = lm(lwage ~ . -wage -feduc, data = na.omit(wage))
BIC(m_lwage_nobrthord)
m_lwage_nobrthord = lm(lwage ~ . -wage -meduc, data = na.omit(wage))
BIC(m_lwage_nobrthord)
# type your code for Question 6 here, and Knit
parameters = c('brhord', 'sibs')
for (param in parameters){
m_lwage_noparam = lm(lwage ~ . -wage -param, data = na.omit(wage))
print(param)
BIC(m_lwage_noparam)
}
# type your code for Question 6 here, and Knit
parameters = c(brhord, sibs)
# type your code for Question 6 here, and Knit
m_lwage_nobrhord = lm(lwage ~ . -wage -brhord, data = na.omit(wage))
# type your code for Question 6 here, and Knit
m_lwage_nobrthord = lm(lwage ~ . -wage -brthord, data = na.omit(wage))
print('brthord')
BIC(m_lwage_nobrthord)
m_lwage_nosbs = lm(lwage ~ . -wage -sibs, data = na.omit(wage))
print('sibs')
BIC(m_lwage_nosibs)
# type your code for Question 6 here, and Knit
m_lwage_nobrthord = lm(lwage ~ . -wage -brthord, data = na.omit(wage))
print('brthord')
BIC(m_lwage_nobrthord)
m_lwage_nosibs = lm(lwage ~ . -wage -sibs, data = na.omit(wage))
print('sibs')
BIC(m_lwage_nosibs)
m_lwage_nofeduc = lm(lwage ~ . -wage -feduc, data = na.omit(wage))
print('feduc')
BIC(m_lwage_nofeduc)
m_lwage_nomeduc = lm(lwage ~ . -wage -meduc, data = na.omit(wage))
print('meduc')
BIC(m_lwage_nomeduc)
# type your code for Question 6 here, and Knit
m_lwage_nobrthord = lm(lwage ~ . -wage -brthord, data = na.omit(wage))
print('brthord dropped')
BIC(m_lwage_nobrthord)
m_lwage_nosibs = lm(lwage ~ . -wage -sibs, data = na.omit(wage))
print('sibs dropped')
BIC(m_lwage_nosibs)
m_lwage_nofeduc = lm(lwage ~ . -wage -feduc, data = na.omit(wage))
print('feduc dropped')
BIC(m_lwage_nofeduc)
m_lwage_nomeduc = lm(lwage ~ . -wage -meduc, data = na.omit(wage))
print('meduc dropped')
BIC(m_lwage_nomeduc)
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=logn(n))
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=log10(n))
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=log())
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=log(n)) # this makes it BIC
# type your code for the Exercise here, and Knit
m_lwage_full.lm = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full.lm, k=log(n)) # this makes it BIC
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(lwage ~ . -wage , data = na.omit(wage), k=log(n)) # this makes it BIC
# type your code for the Exercise here, and Knit
m_lwage_full = lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=log(n)) # this makes it BIC
# type your code for the Exercise here, and Knit
m_lwage_full = bas.lm(lwage ~ . -wage , data = na.omit(wage))
stepAIC(m_lwage_full, k=log(n)) # this makes it BIC
wage_no_na = na.omit(wage)
bma_lwage = bas.lm(lwage ~ . -wage, data = wage_no_na,
prior = "BIC",
modelprior = uniform())
bma_lwage
summary(bma_lwage)
par(mfrow = c(1,2))
coef_lwage = coefficients(bma_lwage)
plot(coef_lwage, subset = c(3,13), ask=FALSE)
confint(coef_lwage)
# type your code for Question 7 here, and Knit
wage_no_na_red = na.omit(wage_red)
# type your code for Question 7 here, and Knit
wage_no_na_red = na.omit(wage)
bma_lwage_red = bas.lm(lwage ~ . -wage, data = wage_no_na_red,
prior = "BIC",
modelprior = uniform())
bma_lwage_red
summary(bma_lwage_red)
# type your code for Question 8 here, and Knit
bma_lwage_red
#summary(bma_lwage_red)
# type your code for Question 8 here, and Knit
wage_no_na_red = na.omit(wage)
bma_lwage_red = bas.lm(lwage ~ . -wage, data = wage_no_na_red)
bma_lwage_red
summary(bma_lwage_red)
par(mfrow = c(1,1))
coef_lwage = coefficients(bma_lwage)
plot(coef_lwage, subset = c(6), ask=FALSE)
par(mfrow = c(1,1))
coef_lwage_red = coefficients(bma_lwage_red)
plot(coef_lwage_red, subset = c(6), ask=FALSE)
par(mfrow = c(1,1))
coef_lwage_red = coefficients(bma_lwage_red)
plot(coef_lwage_red, subset = c(5), ask=FALSE)
par(mfrow = c(1,1))
coef_lwage_red = coefficients(bma_lwage_red)
plot(coef_lwage_red, subset = c(7), ask=FALSE)
par(mfrow = c(1,1))
coef_lwage_red = coefficients(bma_lwage_red)
plot(coef_lwage_red, subset = c(8), ask=FALSE)
set.seed(314)
N = 100000
phi = rgamma(N,3/2,2)
sigma2 = 1/phi
mu = rnorm(N, 1, sqrt(sigma2/4))
y_5 = rnorm(N, mu, sqrt(sigma2))
hist(y_5, prob=T, breaks=30, xlab=expression(y[5]), main="")
quantile(y_5, c(0.025,0.975))
BPM_pred_lwage =  predict(bma_lwage, estimator="BPM", se.fit=TRUE)
bma_lwage$namesx[BPM_pred_lwage$bestmodel+1]
MPM_pred_lwage =  predict(bma_lwage, estimator="MPM")
bma_lwage$namesx[MPM_pred_lwage$bestmodel+1]
opt = which.max(BPM_pred_lwage$fit)
t(wage_no_na[opt, ])
ci_lwage = confint(BPM_pred_lwage, parm="pred")
ci_lwage[opt,]
exp(ci_lwage[opt,])
BMA_pred_lwage =  predict(bma_lwage, estimator="BMA", se.fit=TRUE)
ci_bma_lwage = confint(BMA_pred_lwage, estimator="BMA")
opt_bma = which.max(BMA_pred_lwage$fit)
exp(ci_bma_lwage[opt_bma,])
knit_with_parameters('C:/Users/Amin/Dropbox/Studying/MOOC/Duke Specialization/Statistics-with-R/Course IV - Bayesian Inference/Week 4/bayes_regression_Coursera.rmd')
knit_with_parameters('C:/Users/Amin/Dropbox/Studying/MOOC/Duke Specialization/Statistics-with-R/Course IV - Bayesian Inference/Week 4/bayes_regression_Coursera.rmd')
